$color_1: var(--light-yellow-1);
$background-color_1: #08441ce6;
$navbar: (
	'height': 96px,
	'mobile-height': 80px,
	'padding': 24px,
	'mobile-padding': 16px,
	'border-radius': 48px,
	'mobile-border-radius': 40px,
	'background': rgba(8, 68, 28, 0.95),
	'mobile-background': rgba(8, 68, 28, 0.98)
);

// Calculations for perfect roundness
$button-height: calc(#{map-get($navbar, 'height')} - #{map-get($navbar, 'padding')} * 2);
$button-border-radius: calc(#{$button-height} / 2);
$inner-padding: 20px;

// 2. Animation variables
$transitions: (
	'default': all 0.3s ease,
	'transform': transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
	'opacity': opacity 0.2s ease,
	'background': background-color 0.3s ease
);

// 3. Mixins for common patterns
@mixin glass-effect {
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
	background-color: map-get($navbar, 'background');
	border: 1px solid rgba(255, 255, 255, 0.1);
}

@mixin hover-lift {
	transition: map-get($transitions, 'transform');
	&:hover {
		transform: translateY(-2px);
	}
}

// Add new text scaling variables
$text-scale: (
	'desktop': 1,
	'laptop': 0.95,
	'tablet': 0.9,
	'mobile': 0.85
);

// Add mobile menu specific variables
$mobile-menu: (
	'padding-v': 32px,
	'padding-h': 24px,
	'gap': 24px,
	'button-height': 56px
);

// Update breakpoints
$breakpoints: (
	'mobile': 430px,
	'tablet': 768px,
	'laptop': 1010px,
	'desktop': 1440px
);

@mixin respond-to($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media screen and (max-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	}
}

.nav-bar-container {
	width: 100%;
	padding: 24px var(--section-padding);
	position: fixed;
	top: 0;
	left: 0;
	z-index: 1000;
	display: flex;
	justify-content: center;
	pointer-events: none;
	box-sizing: border-box;
	transition: map-get($transitions, 'default');

	.nav-bar {
		max-width: var(--section-max-width);
		width: 100%;
		height: map-get($navbar, 'height');
		display: flex;
		justify-content: space-between;
		align-items: center;
		background-color: map-get($navbar, 'background');
		border-radius: map-get($navbar, 'border-radius');
		padding: 0 map-get($navbar, 'padding');
		pointer-events: auto;
		@include glass-effect;
		box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
		box-sizing: border-box;
		position: relative;

		.logo {
			height: 100%;
			display: flex;
			align-items: center;
			padding: $inner-padding 0;
			flex-shrink: 0; // Prevent logo from shrinking
			
			a {
				display: flex;
				align-items: center;
				
				img {
					width: clamp(140px, 15vw, 180px);
					height: auto;
					display: block;
				}
			}
		}

		.menu {
			height: 100%;
			display: flex;
			align-items: center;
			gap: $inner-padding * 1.5;
			padding: $inner-padding 0;
			flex-wrap: nowrap; // Prevent wrapping
			overflow-x: auto; // Allow horizontal scroll if needed
			scrollbar-width: none; // Hide scrollbar Firefox
			-ms-overflow-style: none; // Hide scrollbar IE/Edge
			&::-webkit-scrollbar { display: none; } // Hide scrollbar Chrome

			// Scale text based on viewport
			font-size: clamp(15px, 1.5vw, 17px);
			white-space: nowrap; // Prevent text wrapping

			button {
				height: $button-height;
				border-radius: $button-border-radius;
				padding: 0 calc($inner-padding * 1.75);
				position: relative;
				
				&.active::after {
					content: '';
					position: absolute;
					bottom: -4px;
					left: 50%;
					transform: translateX(-50%);
					width: 4px;
					height: 4px;
					border-radius: 50%;
					background-color: var(--light-yellow-1);
				}
			}

			// Desktop menu
			@include respond-to('laptop') {
				display: none; // Hide desktop menu on mobile
			}
		}

		.cta {
			height: 100%;
			display: flex;
			gap: $inner-padding - 8px;
			align-items: center;
			padding: $inner-padding 0;
			flex-shrink: 0; // Prevent CTA from shrinking

			.button-comp-primary,
			.button-comp-secondary-white-bg {
				height: $button-height;
				border-radius: $button-border-radius;
				padding: 0 calc($inner-padding * 1.75);
				white-space: nowrap;
				font-size: clamp(15px, 1.5vw, 17px);
			}

			// Desktop CTA
			@include respond-to('laptop') {
				display: none; // Hide desktop CTA on mobile
			}
		}

		.menu-phone {
			display: none;

			@include respond-to('laptop') {
				display: flex;
				position: relative;
				align-items: center;
				margin-left: auto;

				span {
					cursor: pointer;
					width: 44px;
					height: 44px;
					display: flex;
					align-items: center;
					justify-content: center;
					border-radius: 50%;
					transition: all 0.2s ease;
					background-color: rgba(255, 255, 255, 0.1);

					&:hover {
						background-color: rgba(255, 255, 255, 0.2);
						transform: scale(1.05);
					}

					&:active {
						transform: scale(0.95);
					}

					svg {
						width: 28px;
						height: 28px;
						color: var(--light-yellow-1);
						stroke-width: 2px;
						filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
					}
				}

				> div {
					position: fixed; // Changed to fixed
					top: calc(#{map-get($navbar, 'mobile-height')} + 16px);
					right: var(--section-padding);
					width: min(400px, calc(100vw - 48px));
					background-color: map-get($navbar, 'mobile-background');
					padding: map-get($mobile-menu, 'padding-v') map-get($mobile-menu, 'padding-h');
					display: flex;
					flex-direction: column;
					gap: map-get($mobile-menu, 'gap');
					transform: translateY(-20px);
					opacity: 0;
					visibility: hidden;
					transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
					@include glass-effect;
					border-radius: 24px;
					box-shadow: 
						0 4px 6px -1px rgba(0, 0, 0, 0.1),
						0 2px 4px -1px rgba(0, 0, 0, 0.06),
						0 20px 25px -5px rgba(0, 0, 0, 0.1);

					&.active {
						transform: translateY(0);
						opacity: 1;
						visibility: visible;
					}

					.menu {
						display: flex;
						flex-direction: column;
						width: 100%;
						gap: 12px;
						padding: 0;

						button {
							height: map-get($mobile-menu, 'button-height');
							width: 100%;
							justify-content: flex-start;
							padding: 0 20px;
							border-radius: 16px;
							font-size: 16px;
							
							svg {
								width: 20px;
								height: 20px;
							}

							&:hover {
								background-color: rgba(255, 255, 255, 0.1);
							}

							&.active::after {
								content: '';
								position: absolute;
								bottom: -4px;
								left: 50%;
								transform: translateX(-50%);
								width: 4px;
								height: 4px;
								border-radius: 50%;
								background-color: var(--light-yellow-1);
							}
						}
					}

					.cta {
						display: flex;
						flex-direction: column;
						width: 100%;
						gap: 12px;
						padding: 0;
						margin-top: 8px;

						button {
							height: map-get($mobile-menu, 'button-height');
							width: 100%;
							border-radius: 16px;
							font-size: 15px;
							padding: 0 20px;

							svg {
								width: 20px;
								height: 20px;
							}
						}
					}

					&::before {
						content: '';
						position: absolute;
						top: -8px;
						right: 20px;
						width: 16px;
						height: 16px;
						background: inherit;
						border-radius: 3px;
						transform: rotate(45deg);
						border-top: 1px solid rgba(255, 255, 255, 0.1);
						border-left: 1px solid rgba(255, 255, 255, 0.1);
					}
				}
			}

			@include respond-to('mobile') {
				> div {
					right: 24px;
					left: 24px;
					width: auto;
				}
			}
		}

		// Additional breakpoints for text scaling
		@media screen and (max-width: 1200px) {
			.menu, .cta {
				gap: $inner-padding;
			}
		}

		@include respond-to('tablet') {
			.logo img {
				width: 120px;
			}
		}

		// Responsive adjustments
		@include respond-to('laptop') {
			height: map-get($navbar, 'mobile-height');
			border-radius: map-get($navbar, 'mobile-border-radius');
			padding: 0 map-get($navbar, 'mobile-padding');
		}

		@include respond-to('mobile') {
			.menu-phone > div {
				right: 24px;
				left: 24px;
				width: auto;
			}
		}
	}

	// Add scrolled state styles
	&.scrolled {
		padding: 20px var(--section-padding);

		@include respond-to('laptop') {
			padding: 16px var(--section-padding);
		}

		@include respond-to('mobile') {
			padding: 16px 24px;
		}

		.nav-bar {
			background-color: map-get($navbar, 'background');
			box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
		}
	}
}

// Add utility class for text truncation if needed
.text-truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}